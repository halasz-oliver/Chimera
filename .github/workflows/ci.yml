name: CHIMERA CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Debug, Release]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Clang (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-15
          echo "CC=clang-15" >> $GITHUB_ENV
          echo "CXX=clang++-15" >> $GITHUB_ENV
          # Verify compiler installation
          clang-15 --version
          which clang-15
        if: matrix.os == 'ubuntu-latest'

      - name: Setup Clang (macOS)
        run: |
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          clang --version
        if: matrix.os == 'macos-latest'

      - name: Install libsodium
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get install -y libsodium-dev
          else
            brew install libsodium
          fi

      - name: Configure CMake (Force Clang)
        run: |
          mkdir build && cd build
          echo "Forcing CMake to use: CC=$CC, CXX=$CXX"
          cmake .. \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=$CC \
            -DCMAKE_CXX_COMPILER=$CXX \
            -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: Verify Compiler
        run: |
          cd build
          echo "=== CMake Cache Check ==="
          grep -i "CMAKE_CXX_COMPILER" CMakeCache.txt || echo "Not found in cache"
          echo "=== Environment Check ==="
          echo "CC=$CC"
          echo "CXX=$CXX"

      - name: Build
        run: |
          cd build
          make -j$(nproc) VERBOSE=1

      - name: Run tests
        run: |
          cd build
          ./chimera_test

      - name: Run demo (non-blocking)
        run: |
          cd build
          timeout 10s ./chimera_demo || true
