name: CHIMERA CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [clang]
        build_type: [Debug, Release]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Clang on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # Install Clang, its standard library (libc++), and the ABI library
          sudo apt-get install -y clang-15 libc++-15-dev libc++abi-15-dev
          echo "CC=clang-15" >> $GITHUB_ENV
          echo "CXX=clang++-15" >> $GITHUB_ENV

      - name: Setup Clang on macOS
        if: matrix.os == 'macos-latest'
        run: |
          # On macOS, Clang uses libc++ by default. We just set the environment variables.
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Verify Compiler and Environment
        run: |
          echo "C Compiler: $($CC --version)"
          echo "C++ Compiler: $($CXX --version)"

      - name: Install libsodium
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get install -y libsodium-dev
          else
            brew install libsodium
          fi

      - name: Configure CMake
        run: |
          mkdir build && cd build
          # Add the flag to force Clang to use its own standard library
          export CXXFLAGS="-stdlib=libc++"
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                   -DCMAKE_C_COMPILER=$CC \
                   -DCMAKE_CXX_COMPILER=$CXX

      - name: Build
        run: |
          cd build
          # VERBOSE=1 helps debug by showing the full compiler commands
          make -j$(nproc) VERBOSE=1

      - name: Run tests
        run: |
          cd build
          ./chimera_test
