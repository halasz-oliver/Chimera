name: CHIMERA CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  packages: write

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 4
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        compiler: [ clang, gcc ]
        build_type: [ Debug, Release ]
        exclude:
          - os: macos-latest
            compiler: gcc

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Build Environment
        id: setup
        run: |
          # Cross-platform CPU core detection
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            echo "cpu_cores=$(nproc)" >> $GITHUB_OUTPUT
          else
            echo "cpu_cores=$(sysctl -n hw.ncpu)" >> $GITHUB_OUTPUT
          fi

      - name: Install toolchain & deps
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            if [[ "${{ matrix.compiler }}" == "clang" ]]; then
              sudo apt-get install -y clang-15 libc++-15-dev libc++abi-15-dev
              echo "CC=clang-15"  >> "$GITHUB_ENV"
              echo "CXX=clang++-15" >> "$GITHUB_ENV"
              echo "CXXFLAGS=-stdlib=libc++" >> "$GITHUB_ENV"
            else
              sudo apt-get install -y gcc-12 g++-12
              echo "CC=gcc-12"  >> "$GITHUB_ENV"
              echo "CXX=g++-12" >> "$GITHUB_ENV"
            fi
            sudo apt-get install -y libsodium-dev pkg-config
          else   # macOS
            brew install libsodium pkg-config
            if [[ "${{ matrix.compiler }}" == "clang" ]]; then
              echo "CC=clang"  >> "$GITHUB_ENV"
              echo "CXX=clang++" >> "$GITHUB_ENV"
            fi
          fi

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX \
            -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: Build
        run: |
          cmake --build build -j${{ steps.setup.outputs.cpu_cores }}

      - name: Test
        run: |
          cd build
          ./chimera_test

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: chimera-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: |
            build/chimera_demo
            build/chimera_test
          retention-days: 7
