name: CHIMERA CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]
        build_type: [Debug, Release]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup compiler
        run: |
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get update && sudo apt-get install -y gcc-12 g++-12
            echo "CC=gcc-12" >> $GITHUB_ENV
            echo "CXX=g++-12" >> $GITHUB_ENV
          else
            sudo apt-get update && sudo apt-get install -y clang-15
            echo "CC=clang-15" >> $GITHUB_ENV
            echo "CXX=clang++-15" >> $GITHUB_ENV
          fi
        if: matrix.os == 'ubuntu-latest'

      - name: Install libsodium
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update && sudo apt-get install -y libsodium-dev
          else
            brew install libsodium
          fi

      - name: Configure CMake
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build
        run: |
          cd build
          make -j$(nproc)

      - name: Run tests
        run: |
          cd build
          ./chimera_test

      - name: Run demo (non-blocking)
        run: |
          cd build
          timeout 10s ./chimera_demo || true

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
    # TODO: CodeQL analysis
    # TODO: Dependency vulnerability scan

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
    # TODO: Multi-stage Docker build
    # TODO: Container security scanning
