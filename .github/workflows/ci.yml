name: CHIMERA CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

# Biztonság: csak a szükséges jogokat add meg
permissions:
  contents: read
  id-token: write   # pl. OIDC-hez, ha később kell
  packages: write   # artefact-feltöltéshez

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 4
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        compiler: [ clang, gcc ]
        build_type: [ Debug, Release ]
        exclude:
          - os: macos-latest
            compiler: gcc   # macOS → GCC nehezebben elérhető

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # Cache a teljes build-könyvtár helyett csak a kompilált liboqs/lib-eket
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/chimera-deps
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.compiler }}-

      - name: Install toolchain & deps
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update
            # ----- Compiler -----
            if [[ "${{ matrix.compiler }}" == "clang" ]]; then
              sudo apt-get install -y clang-15 libc++-15-dev libc++abi-15-dev
              echo "CC=clang-15"  >> "$GITHUB_ENV"
              echo "CXX=clang++-15" >> "$GITHUB_ENV"
              echo "CXXFLAGS=-stdlib=libc++" >> "$GITHUB_ENV"
            else
              sudo apt-get install -y gcc-12 g++-12
              echo "CC=gcc-12"  >> "$GITHUB_ENV"
              echo "CXX=g++-12" >> "$GITHUB_ENV"
            fi
            # ----- Libs -----
            sudo apt-get install -y libsodium-dev pkg-config
            if ! dpkg -s liboqs-dev >/dev/null 2>&1; then
              echo \"liboqs not in APT – building from source\"
              mkdir -p ~/.cache/chimera-deps && cd ~/.cache/chimera-deps
              git clone --depth 1 https://github.com/open-quantum-safe/liboqs.git
              cmake -S liboqs -B liboqs/build -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release
              cmake --build liboqs/build -j$(nproc)
              sudo cmake --install liboqs/build
              sudo ldconfig
            fi
          else   # macOS
            brew update
            brew install libsodium liboqs pkg-config
            if [[ "${{ matrix.compiler }}" == "clang" ]]; then
              echo "CC=clang"  >> "$GITHUB_ENV"
              echo "CXX=clang++" >> "$GITHUB_ENV"
            fi
          fi

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX \
            -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build
        run: cmake --build build -j$(nproc)

      - name: Test
        run: |
          cd build
          ctest --output-on-failure

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: chimera-${{ matrix.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}
          path: |
            build/chimera_demo
            build/chimera_test
            build/compile_commands.json
          retention-days: 7

  # Opcionális bővített kriptotesztek a főágra
  crypto-validation:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run extended crypto validation
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y clang-15 libc++-15-dev libc++abi-15-dev libsodium-dev pkg-config
          echo "CC=clang-15"  >> "$GITHUB_ENV"
          echo "CXX=clang++-15" >> "$GITHUB_ENV"
          # liboqs build (cached)
          if ! ldconfig -p | grep -q liboqs; then
            mkdir -p ~/.cache/chimera-deps && cd ~/.cache/chimera-deps
            git clone --depth 1 https://github.com/open-quantum-safe/liboqs.git
            cmake -S liboqs -B liboqs/build -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release
            cmake --build liboqs/build -j$(nproc)
            sudo cmake --install liboqs/build
            sudo ldconfig
          fi
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX
          cmake --build build -j$(nproc)
          build/chimera_test
